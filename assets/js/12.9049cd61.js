(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{187:function(s,t,n){"use strict";n.r(t);var a=n(0),e=Object(a.a)({},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"content"},[s._m(0),s._v(" "),n("p",[s._v("GIt以其方便安全快捷的特点，在版本控制领域可谓是大放光彩，深受广大开发者的喜爱。优点就不多说了，后面省去一大堆字……GIt常用的知识点不多，但是所有其他细节内容也绝对不少，本文旨在介绍/记录常用的知识点，解决日常业务中绝大多数的问题。引用一句话，就是说：")]),s._v(" "),s._m(1),n("p",[s._v("如果你问我这句话是谁说的，咳咳～我只能给你个谜一样的眼神！文章不会再提最最基本的内容，例如安装等等，如果还不会的就去学学怎么装QQ吧。哦，不会！要讲的是Git，装什么qq！还是学习装个微信吧～～步入正题，基本的几个命令：")]),s._v(" "),s._m(2),s._v(" "),s._m(3),s._m(4),s._v(" "),s._m(5),s._m(6),s._v(" "),s._m(7),n("p",[s._v("上面这几个命令相信大家都很熟悉，就先不做过多介绍。唯一值得一提的是vim这块。vim可能对于很多小伙伴来说不知道怎么回事，后端的可能一些小伙伴用过或者非常熟悉。")]),s._v(" "),s._m(8),s._v(" "),n("p",[s._v("一些小伙伴在提交本地仓库的时候忘记加-m参数的时候，经常会遇到这个情况，然后使出九牛二虎之力也搞不好，也没法删也没法改，最后只能默默关掉终端～有木有～")]),s._v(" "),n("p",[s._v("其实这个就是在commit的时候没有加-m参数，从而调起的默认的vim编辑器。小伙伴们不知道如何解决就是因为对vim没有了解。解决办法，很简单，这里"),n("a",{attrs:{href:"https://juejin.im/post/5b0ad976f265da0dd374b824",target:"_blank",rel:"noopener noreferrer"}},[s._v("附上另一篇专门针对这个问题的解决办法的小文章"),n("OutboundLink")],1),s._v("。如果小伙伴对vim非常感兴趣的话，可以去系统的学习。")]),s._v(" "),n("p",[s._v("这里，只希望对于vim的基本操作有所了解，后面还有一些高级操作，需要基于此。")]),s._v(" "),s._m(9),s._v(" "),s._m(10),n("p",[s._v("例如下图，我的commit信息中打错了一个字，我便可以通过此方式修改。")]),s._v(" "),s._m(11),s._v(" "),n("p",[s._v("然后按照vim的方式，保存退出即可。此时你再git log查看一下提交信息，就会是你想要的了。")]),s._v(" "),s._m(12),s._v(" "),s._m(13),n("p",[s._v("这个查看commit记录的命令，相对简单，就不多说什么了，可以自己运行一下试试具体的区别就知道了。而在工作中，我们更多的会配合一些可视化工具，来更好的查看分支情况/提交情况等等，诺诺～～看下图绍：")]),s._v(" "),s._m(14),s._v(" "),s._m(15),s._v(" "),s._m(16),s._m(17),s._v(" "),s._m(18),s._v(" "),n("p",[s._v("而一个分支branch，其实也只是一组commit记录。")]),s._v(" "),s._m(19),s._v(" "),s._m(20),n("p",[s._v("这也是一个很有用的命令。例如你在dev分支上，突然你需要把beta上面的某次commit合并到当前分支上，那你就可以使用该命令。")]),s._v(" "),n("p",[s._v("这里需要提一下SHA-1值，关于他更多的内容不去多说，只说一下他是从哪里得到的，就是git log你可以看到的一长串字符。或者在类似sourceTree的可视化工具中直接复制就可以了。不多介绍。")]),s._v(" "),s._m(21),s._v(" "),s._m(22),s._m(23),s._v(" "),s._m(24),s._m(25),s._v(" "),s._m(26),s._m(27),s._v(" "),s._m(28),s._m(29),s._v(" "),s._m(30),s._m(31),s._v(" "),s._m(32),s._m(33),s._v(" "),s._m(34),s._m(35),s._v(" "),s._m(36),s._m(37),s._v(" "),s._m(38),s._m(39),s._v(" "),s._m(40),n("p",[s._v("可以通过设置.gitignore文件的git匹配规则，告知git应该跟踪哪些文件和忽略哪些文件。采用的是标准的glob匹配规则，上面参考网上场景的glob匹配规则，其实就是shell中简化的正则。需要系统学习的小伙伴可以自行查阅glob相关文档。")]),s._v(" "),n("p",[s._v("通过这些内容：暂存/提交/标签/分支/回退/变基，可以解决我们日常中绝大部分的版本管理的内容。特别是变基rebase，是非常常用的一个功能。灵活运用这些命令，相信一定能更好的帮助你开发。")]),s._v(" "),n("p",[s._v("如果觉得有用，不妨简单收藏一下这些命令，忘了时候拿出来瞅一眼！怕啥，瞅一眼能咋滴！！")])])},[function(){var s=this.$createElement,t=this._self._c||s;return t("h1",{attrs:{id:"能解决80-场景的git必会知识点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#能解决80-场景的git必会知识点","aria-hidden":"true"}},[this._v("#")]),this._v(" 能解决80%场景的Git必会知识点")])},function(){var s=this.$createElement,t=this._self._c||s;return t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("我们可以使用20%的知识，解决80%的问题\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"初始化git项目（前提你装好git环境，然后在命令行或者类似vscode等编辑器的终端中运行如下指令。这个还不会的自行百度吧），两种方式，注意区别："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始化git项目（前提你装好git环境，然后在命令行或者类似vscode等编辑器的终端中运行如下指令。这个还不会的自行百度吧），两种方式，注意区别：","aria-hidden":"true"}},[this._v("#")]),this._v(" 初始化git项目（前提你装好git环境，然后在命令行或者类似vscode等编辑器的终端中运行如下指令。这个还不会的自行百度吧），两种方式，注意区别：")])},function(){var s=this.$createElement,t=this._self._c||s;return t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("// 在当前目录新建一个Git代码库\ngit init\n// 在当前目录新建一个目录，并在新建的目录中初始化Git代码库 \ngit init 新建的文件夹名 // 例如 git init git-study\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br"),t("span",{staticClass:"line-number"},[this._v("2")]),t("br"),t("span",{staticClass:"line-number"},[this._v("3")]),t("br"),t("span",{staticClass:"line-number"},[this._v("4")]),t("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"将文件提交到暂存区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将文件提交到暂存区","aria-hidden":"true"}},[this._v("#")]),this._v(" 将文件提交到暂存区")])},function(){var s=this.$createElement,t=this._self._c||s;return t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("// 将单个、多个文件添加到暂存区\ngit add [file1] [file2]\n// 将所有工作区所有改动，添加到暂存区，注意后面有个点\ngit add .\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br"),t("span",{staticClass:"line-number"},[this._v("2")]),t("br"),t("span",{staticClass:"line-number"},[this._v("3")]),t("br"),t("span",{staticClass:"line-number"},[this._v("4")]),t("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"将暂存区文件提交到本地仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将暂存区文件提交到本地仓库","aria-hidden":"true"}},[this._v("#")]),this._v(" 将暂存区文件提交到本地仓库")])},function(){var s=this.$createElement,t=this._self._c||s;return t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('// 需要添加-m添加备注信息\ngit commit -m "备注的信息"\n// 如果不添加-m参数，则会调起编辑器编辑commit的备注信息,默认是vim\n')])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br"),t("span",{staticClass:"line-number"},[this._v("2")]),t("br"),t("span",{staticClass:"line-number"},[this._v("3")]),t("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/3/10/16968520a6f0fee4?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"img"}})])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"commit之后发现提交错了信息怎么办？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#commit之后发现提交错了信息怎么办？","aria-hidden":"true"}},[this._v("#")]),this._v(" commit之后发现提交错了信息怎么办？")])},function(){var s=this.$createElement,t=this._self._c||s;return t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("// 当前的这一次提交出现了错误，可以通过下面这个命令进入vim进行修改\ngit commit --amend\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br"),t("span",{staticClass:"line-number"},[this._v("2")]),t("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/3/11/169685ef6417d5b4?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"img"}})])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"查看所有commit提交记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看所有commit提交记录","aria-hidden":"true"}},[this._v("#")]),this._v(" 查看所有commit提交记录")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 只包含提交信息\ngit log\n\n// 查看所有提交记录的详细细节\n// 包含了具体改动的代码\ngit log -p   // -p是--patch的缩写\n\n// 查看简要统计// 简要包含了，哪个文件被改动了\ngit log --stat\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[t("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/3/11/1696864c454eac99?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"img"}})])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"版本回退"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#版本回退","aria-hidden":"true"}},[this._v("#")]),this._v(" 版本回退")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 回退到上一次提交，一个^代表一次提交\ngit reset --hard HEAD^\n// 回退上上次提交\ngit reset --hard HEAD^^\n// 回退更多次的话，可以使用～符号,例如回退一百次\ngit reset --hard HEAD~100\n// 回退到具体的某一次commit\ngit reset --hard 某次commit的SHA-1值\n例如：git reset --hard ee368ca3aed3e34682859495616ced301bbece34\n\n// 本质移动HEAD和当前branch的指向，并把移动后产生的新的差异放进暂存区\n// 直接回退到某次commit，--hard是一个参数，表示指向移动后，重置工作区内容\ngit reset --hard 0E123213\ngit reset --hard dev\n// 参数--soft会把回退后产生的新差异直接放进暂存区，并保留当前工作目录\ngit reset --soft 02e21321\n// 不加参数或者参数--mixed,会保留工作目录，并把暂存区的内容和回退后产生的新差异都放进工作目录，并清空暂存区\ngit reset 02e2131231\ngit reset --mixed 02e123123\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("p",[this._v("我们能通过git commit提交记录，自然就能回退记录。git中版本回退的命令是"),t("code",[this._v("git reset")]),this._v("，默认不加参数，和加参数"),t("code",[this._v("git reset --mixed")]),this._v("是一样的。这种我们用的不多，更多的是加参数"),t("code",[this._v("--hard")]),this._v("，具体的命令都在上面，注释也写的比较详细。")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("p",[s._v("这里提一点概念，HEAD在git中其实是指向当前commit的引用，就像js中的引用类型一样，你也可以把它简单理解为指针等。而一个^符号代表一次commit，"),n("code",[s._v("HEAD^")]),s._v("就是当前最新的这次commit，"),n("code",[s._v("HEAD^^")]),s._v("是再往前一次commit，以此类推。"),n("code",[s._v("~n")]),s._v("，表示从当前最新的这个commit开始，往前第n个commit，例如："),n("code",[s._v("HEAD～1")]),s._v("是当前这次commit，等价于"),n("code",[s._v("HEAD^")]),s._v("，"),n("code",[s._v("HEAD～2")]),s._v("是前一次commit，等价于"),n("code",[s._v("HEAD^^")]),s._v("。")])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"将某次commit的改动，合并到当前分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将某次commit的改动，合并到当前分支","aria-hidden":"true"}},[this._v("#")]),this._v(" 将某次commit的改动，合并到当前分支")])},function(){var s=this.$createElement,t=this._self._c||s;return t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("// 首先拷贝需要合并到当前分支的那个commit值的SHA-1值\n// 然后在当前分支执行如下命令\ngit cherry-pick 某次提交的sha-1值 \n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br"),t("span",{staticClass:"line-number"},[this._v("2")]),t("br"),t("span",{staticClass:"line-number"},[this._v("3")]),t("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储","aria-hidden":"true"}},[this._v("#")]),this._v(" 存储")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 存储已跟踪文件的改动和暂存区的内容\n// 未被跟踪的文件不会被暂存\n// 所有的存储都会被存储在一个栈上，以期取出\ngit stash\n或\ngit stash save\n// 如果要存储未被跟踪的文件\ngit stash -u\n\n// 查看所有暂存\ngit stash list\n\n// 取出\ngit stash apply // 取出后栈内还保存当前存储记录，下次可以再次取出当前存储\ngit stash pop // 取出后，栈内便删除当前存储记录，可以理解为数组的pop方法\n\n// 移除存储记录\ngit stash drop 存储记录的名字（即git stash list每条记录开头显示的名字）\n\n// 暂存除了暂存区以外的改动\ngit stash save --keep-index\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"推送相关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#推送相关","aria-hidden":"true"}},[this._v("#")]),this._v(" 推送相关")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 如果本地已有项目，可以连接远程库\ngit remote add origin 远程库地址\n\n// 查看远程库\ngit remote\n// 查看远程库详细信息（包含名称和地址）\ngit remote -v\n\n// 推送到远程分支\ngit push\n// 强制推送，会覆盖远程分支;要确保是私有分支\ngit push -f \n\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标签","aria-hidden":"true"}},[this._v("#")]),this._v(" 标签")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 查看已打标签\ngit tag\n\n// 创建一个标签，一般会起v1.0.0、 v2.1.1等等\ngit tag 标签名\n// 创建一个v1.0.0的tag同时，加上备注信息\ngit tag v1.0.0 -m"备注信息内容"\n\n// 查看标签信息\ngit show 标签名\n\n// 将本地某个tag上传到远程服务器\ngit push origin v1.0.0\n// 将远程服务器没有的所有本地tag全部上传\ngit push origin --tags\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"分支"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分支","aria-hidden":"true"}},[this._v("#")]),this._v(" 分支")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 查看分支：\ngit branch\n\n// 创建分支：\ngit branch \n\n// 切换分支：\ngit checkout \n// 本质是签出，将HEAD指向某个branch，然后签出这个branch对应的工作目录\n// 因此如下都是可行的\ngit checkout HEAD^^\ngit checkout master～2\ngit checkout 0e2321312\n\n// 创建+切换分支：\ngit checkout -b \n// 克隆远程某个分支到本地的新分支\ngit checkout -b dev origin/dev\n\n// 合并某分支到当前分支：\ngit merge \n\n// 删除本地分支：\ngit branch -d \n// 删除远程分支\ngit push origin -d 要删除的分支名 // 误删分支\ngit reflog // 查看git仓库引用的移动记录\n// 找到被删除之前的那次移动记录的SHA-1\n// 切换到那次的commit记录\n// 然后切出一个新分支就好\ngit checkout 0123123123\ngit checkout -b 新分支\n\n// 补：查看某个分支的引用移动记录\ngit reflog 分支名\n\n// 查看所有分支，包括远程分支\ngit branch -a\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"合并当前分支上的多个commit记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#合并当前分支上的多个commit记录","aria-hidden":"true"}},[this._v("#")]),this._v(" 合并当前分支上的多个commit记录")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 列出要操作的commit\ngit rebase -i HEAD~次数\n// 在调起的vim编辑器中，编辑每条记录前面的操作类型\n// 最上面的是最老的提交\npick 5e187c7dbe8\t提交内容1\npick 6d577eb3440\t提交内容2\npick f9b9508a3ab\t提交内容3\npick 111ab9cc261\t提交内容4\n// 先2-4的pick改成squash\npick 5e187c7dbe8\t提交内容1\nsquash 6d577eb3440\t提交内容2\nsquash f9b9508a3ab\t提交内容3\nsquash 111ab9cc261\t提交内容4\n//然后保存退出，会进入一个设置commit界面的入口\n# This is a combination of 4 commits.\n# The first commit’s message is:\n提交内容1\n\n# The 2nd commit’s message is:\n提交内容2\n\n# The 3rd commit’s message is:\n提交内容3\n\n# The 4th commit’s message is:\n提交内容4# Please enter the commit message for your changes. Lines starting\n# with ‘#’ will be ignored, and an empty message aborts the commit.\n\n//这时候需要删掉对应的commit信息，设置一个合并后的commit信息\n// 然后保存退出\n// 最后可以git push -f 强推远程分支\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"去掉当前分支上的某些commit引用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#去掉当前分支上的某些commit引用","aria-hidden":"true"}},[this._v("#")]),this._v(" 去掉当前分支上的某些commit引用")])},function(){var s=this.$createElement,t=this._self._c||s;return t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("// 列出当前分支上需要操作的几次commit\ngit rebase -i HEAD~次数\n// 直接删除对应的commit\n// 在vim中删除\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br"),t("span",{staticClass:"line-number"},[this._v("2")]),t("br"),t("span",{staticClass:"line-number"},[this._v("3")]),t("br"),t("span",{staticClass:"line-number"},[this._v("4")]),t("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"将某次commit的改动，合并到当前分支-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将某次commit的改动，合并到当前分支-2","aria-hidden":"true"}},[this._v("#")]),this._v(" 将某次commit的改动，合并到当前分支")])},function(){var s=this.$createElement,t=this._self._c||s;return t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("// 首先拷贝需要合并到当前分支的那个commit值的SHA-1值\n// 然后在当前分支执行如下命令\ngit cherry-pick 某次提交的sha-1值\n")])]),this._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[this._v("1")]),t("br"),t("span",{staticClass:"line-number"},[this._v("2")]),t("br"),t("span",{staticClass:"line-number"},[this._v("3")]),t("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"对比区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对比区别","aria-hidden":"true"}},[this._v("#")]),this._v(" 对比区别")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 对比当前工作区与暂存区的内容，即如果你现在git add .的话暂存区会新增哪些内容\ngit diff\n\n// 对比当前暂存区和本地仓库的区别，即如果你现在git commit的话，本地仓库会新增哪些内容\n// 完全等价于git diff --cached  不仅意思相同，作用也相同\ngit diff --staged\n\n// 对比当前工作区与本地仓库的区别\n// 是上面两种区别的综合\ngit diff HEAD\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"查看-修改用户配置信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看-修改用户配置信息","aria-hidden":"true"}},[this._v("#")]),this._v(" 查看/修改用户配置信息")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 查看\ngit config user.name\ngit config user.email\n\n// 修改\ngit config --global user.name "xxx"\ngit config --global user.email "xxx"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])])},function(){var s=this.$createElement,t=this._self._c||s;return t("h2",{attrs:{id:"gitignore文件规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gitignore文件规则","aria-hidden":"true"}},[this._v("#")]),this._v(" .gitignore文件规则")])},function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('1) 空格不匹配任意文件，可作为分隔符，可用反斜杠转义\n2）以“＃”开头的行都会被 Git 忽略。即#开头的文件标识注释，可以使用反斜杠进行转义。\n3）可以使用标准的glob模式匹配。所谓的glob模式是指shell所使用的简化了的正则表达式。\n4）以斜杠"/"开头表示目录；"/"结束的模式只匹配文件夹以及在该文件夹路径下的内容，但是不匹配该文件；\n"/"开始的模式匹配项目跟目录；如果一个模式不包含斜杠，则它匹配相对于当前 .gitignore 文件路径的内容，\n如果该模式不在 .gitignore 文件中，则相对于项目根目录。\n5）以星号"*"通配多个字符，即匹配多个任意字符；\n使用两个星号"**" 表示匹配任意中间目录，比如`a/**/z`可以匹配 a/z, a/b/z 或 a/b/c/z等。\n6）以问号"?"通配单个字符，即匹配一个任意字符；\n7）以方括号"[]"包含单个字符的匹配列表，即匹配任何一个列在方括号中的字符。\n比如[abc]表示要么匹配一个a，要么匹配一个b，要么匹配一个c；\n如果在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配。\n比如[0-9]表示匹配所有0到9的数字，[a-z]表示匹配任意的小写字母）。\n8）以叹号"!"表示不忽略(跟踪)匹配到的文件或目录，即要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。\n需要特别注意的是：如果文件的父目录已经被前面的规则排除掉了，那么对这个文件用"!"规则是不起作用的。\n也就是说"!"开头的模式表示否定，该文件将会再次被包含，如果排除了该文件的父级目录，则使用"!"也不会再次被包含。\n可以使用反斜杠进行转义。\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])])}],!1,null,null,null);t.default=e.exports}}]);